[tool.poetry]
name = "docs"
version = "0.1.0"
description = ""
authors = ["caerulescens <caerulescens.github@proton.me>"]
readme = "README.md"
packages = [{include = "docs", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
mypy = "^1.10.1"

[tool.pytest.ini_options]
addopts = "-ra -q"
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.10"
files = ["src", "tests"]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[tool.ruff]
line-length = 88
src = ["src", "tests"]
target-version = "py310"

[tool.ruff.lint]
select = [
    "F",    # pyflakes
    "E",    # pycodestyle
    "W",    # Warning
    "C90",  # mccabe
    "I",    # isort
    "N",    # pep8-naming
    "D",    # pydocstyle
    "UP",   # pyupgrade
]
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D106",  # Missing docstring in public nested class
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
